use std.io
use std.list

val swap(lst: List[Float], i: Float, j: Float) -> List[Float] {
    val a: Float = list.get(lst, i)
    val b: Float = list.get(lst, j)
    val lst': List[Float] = list.set(lst, i, b)
    list.set(lst', j, a)
}

val bubble_pass(lst: List[Float], n: Float, i: Float, swapped: Bool) -> (List[Float], Bool) {
    match i < n - 1 with
    | False -> (lst, swapped)
    | True -> match list.get(lst, i) > list.get(lst, i + 1) with
        | True -> {
                val lst': List[Float] = swap(lst, i, i + 1)
                bubble_pass(lst', n, i + 1)
            }
        | False -> bubble_pass(lst, n, i + 1, swapped)
}

val bubble_sort(lst: List[Float], n: Float) -> List[Float] {
    val (lst', swapped): (List[Float], Bool) = bubble_pass(lst, n, 0, False)
    match swapped with
    | True -> bubble_sort(lst', n - 1)
    | False -> lst'
}

val main() {
    val nums: List[Float] = [5, 3, 1, 4, 2]
    val sorted: List[Float] = bubble_sort(nums, list.length(nums))
    io.println(sorted)
}