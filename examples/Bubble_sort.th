use std.io
use std.array

val swap(arr: Array[Int], i: Int, j: Int) -> Array[Int] =
    val a: Int = array.get(arr, i)
    val b: Int = array.get(arr, j)
    val arr': Array[Int] = array.set(arr, i, b)
    array.set(arr', j, a)
in

val rec bubble_pass(arr: Array[Int], n: Int, i: Int, swapped: Bool) -> (Array[Int], Bool) =
    match i < n - 1 with
    | False -> (arr, swapped)
    | True ->
        match array.get(arr, i) > array.get(arr, i + 1) with
        | True ->
            val arr': Array[Int] = swap(arr, i, i + 1)
            bubble_pass(arr', n, i + 1, True)
        | False ->
            bubble_pass(arr, n, i + 1, swapped)
in

val rec bubble_sort(arr: Array[Int], n: Int) -> Array[Int] =
    val (arr', swapped): (Array[Int], Bool) = bubble_pass(arr, n, 0, False)
    match swapped with
    | True -> bubble_sort(arr', n - 1)
    | False -> arr'
in

val main() -> Nil =
    val nums: Array[Int] = [5, 3, 1, 4, 2]
    val sorted: Array[Int] = bubble_sort(nums, array.length(nums))
    io.println(sorted)
in
